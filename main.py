import argparse
import json
import os
import sys
import requests

prog = 'Topic Authority Generator'
description = 'Given a list of keywords/topics, this program will map out the topic authority scope'
key_file_help = 'A file containing the keywords to generate a topic authority map'
file_type_help = 'The file type of which the keywords are in either text or the json file generated by google-suggestor, default (text)'
out_file_help = 'A json file map of the topic authority results (default is ./output/topic-authority.json)'
text_filetype = 'text'
default_output_file = os.path.join(
    os.getcwd(), 'output', 'topic-authority.json')

parser = argparse.ArgumentParser(prog=prog, description=description)
parser.add_argument('-f', '--filename', required=True,
                    nargs=1, help=key_file_help)
parser.add_argument('-t', '--filetype', required=False,
                    nargs=1, help=file_type_help)
parser.add_argument('-o', '--output', required=False,
                    nargs=1, help=out_file_help)


def invalid_keyword_file():
    print('Invalid keyword file. Read help menu for more')
    sys.exit(1)


def load_keywords(key_path: str, filetype: str):
    keywords = []
    if len(key_path) < 1 and os.path.isfile(key_path) is False:
        invalid_keyword_file()

    if filetype == text_filetype:
        with open(key_path, 'r+') as keyword_file:
            lines = [line.strip().split(',')
                     for line in keyword_file.readlines()]
            keywords = [keyword.strip()
                        for row in lines for keyword in row if len(keyword) > 1]
    else:
        with open(key_path, 'r+') as keyword_file:
            pass

    if len(keywords) < 1:
        invalid_keyword_file()
    return keywords


def parse_args():
    args = parser.parse_args()
    keyword_file_arg = args.filename[0] if args.filename else ''
    keyword_filetype_arg = args.filetype[0] if args.filetype else text_filetype
    output_file_arg = args.output[0] if args.output else default_output_file

    if os.path.isfile(keyword_file_arg) is False:
        parser.print_help()
        sys.exit(1)

    return {
        'keywords_file': keyword_file_arg,
        'filetype': keyword_filetype_arg,
        'output_file': os.path.join(os.getcwd(), f'{output_file_arg}'),
    }


if __name__ == '__main__':
    args = parse_args()
    keyword_file_path = args.get('keywords_file')
    filetype = args.get('filetype')
    loaded_keywords = load_keywords(keyword_file_path, filetype)
    print(f'load_keywords: {loaded_keywords}')
